swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /accounts:
    get:
      security:
        - Bearer: []
      tags:
        - Account
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      summary: Get all accounts
      description: This route retrieves a list of all the user accounts. A summary description for each account is provided with the title, amount and currency used.
      responses:
        '200':
          description: successful getting all accounts
          schema:
                $ref: '#/definitions/Accounts'
        '401':
          description: Unauthorized - User is not authenticated
  /accounts/{accountId}/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Account
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: accountId
          description: The ID of the account
          required: true
          type: string
      summary: Get all transactions
      description: This route allows the user to retrieve all transactions for a particular account. The API returns transactions for the current month by default
      responses:
        '200':
          description: successful getting all accounts
          schema:
                $ref: '#/definitions/TransactionsSummary'
        '401':
          description: Unauthorized - User is not authenticated
        '404':
          description: The ressource does not exist.
  /accounts/{accountId}/transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Account
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: accountId
          description: The ID of the account
          required: true
          type: string
        - in: path
          name: transactionId
          description: The ID of the transaction
          required: true
          type: string
      summary: Get a specific transaction
      description: This route allows the user to retrieve details related to a transaction
      responses:
        '200':
          description: successful getting all accounts
          schema:
                $ref: '#/definitions/TransactionDetail'
        '401':
          description: Unauthorized - User is not authenticated
        '404':
          description: The ressource does not exist.
    patch:
      security:
        - Bearer: []
      tags:
        - Account
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: accountId
          description: The ID of the account
          required: true
          type: string
        - in: path
          name: transactionId
          description: The ID of the transaction
          required: true
          type: string
        - in: body
          name: body
          description: Create/Edit/Delete notes or categories
          required: true
          schema:
            $ref: '#/definitions/TransactionEdit'
      summary: Edit fields for a specific transaction
      description: This route allows the user to edit notes for a particular transaction.
      responses:
        '204':
          description: resource edited successfully
        '401':
          description: Unauthorized - User is not authenticated
        '404':
          description: The ressource does not exist.
  /categories:
    get:
      security:
        - Bearer: []
      tags:
        - Category
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      summary: Get all categories
      description: this route allows the user to retrieve all the options linked to the categories
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  example: "345345345"
                name:
                  type: string
                  example: "Food"
          examples:
            application/json:
              - id: "019283745"
                name: "Select"
              - id: "664faa739ff7ec4362aefa42"
                name: "Food"
              - id: "664faa739ff7ec4362aefags"
                name: "Market"
              - id: "664faa739ff7ec4362aefatr"
                name: "Hobby"

        '401':
          description: Unauthorized - User is not authenticated
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  Account:
    type: object
    properties:
      id:
        type: string
        example: 664faa739ff7ec4362aefa42
      title:
        type: string
        example: Argent Bank Checking (x8349)
      balance:
        type: number
        example: 2082.79
      currency:
        type: string
        example: $
  Accounts:
    type: array
    items:
      $ref: '#/definitions/Account'
  TransactionDetail:
    type: object
    properties:
      id:
        type: string
        example: 664faa739ff7ec4362aefa42
      date:
        type: string
        example: 2024-10-09
      description:
        type: string
        example: Golden Sun Bakery
      amount:
        type: number
        example: 50
      currency:
        type: string
        example: $
      details:
        type: object
        properties:
          typeTransaction:
            type: string
            example: Electronic
          categoryId:
            type: string
            example: 664faa739ff7ec4362aefa42
          notes:
            type: string
            example: For Tony's birthday
  TransactionsSummary:
    type: array
    items:
      $ref: '#/definitions/TransactionSummary'
  TransactionSummary:
    type: object
    properties:
      id:
        type: string
        example: 664faa739ff7ec4362aefa42
      date:
        type: string
        example: 2024-10-09
      description:
        type: string
        example: Golden Sun Bakery
      amount:
        type: number
        example: 50
      currency:
        type: string
        example: $
  TransactionEdit:
    type: object
    properties:
      notes: 
        type: string
        example: For Stephanie's birthday
      category:
        type: string
        example: 774faa739ff7ec8362aefa53

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
